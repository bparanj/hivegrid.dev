---
- name: Deploy Rack application with Puma
  hosts: all
  become: true
  vars:
    project_directory: /var/www/rack_app

  tasks:
    - name: Ensure project directory exists
      ansible.builtin.file:
        path: "{{ project_directory }}"
        state: directory
        mode: "0755"

    - name: Install bundler
      ansible.builtin.gem:
        name: bundler
        state: present

    - name: Create Gemfile for Puma installation
      ansible.builtin.copy:
        dest: "{{ project_directory }}/Gemfile"
        content: |
          source 'https://rubygems.org'
          gem 'puma'

    - name: Install required gems with Bundler
      ansible.builtin.shell:
        chdir: "{{ project_directory }}"
        cmd: "bundle install --jobs=$(nproc)"

    - name: Create Rack application file
      ansible.builtin.copy:
        dest: "{{ project_directory }}/config.ru"
        content: |
          app = Proc.new do |env|
            ['200', {'Content-Type' => 'text/html'}, ['Hello Puma']]
          end

          run app

    - name: Deploy Puma systemd service file
      ansible.builtin.template:
        src: "../templates/puma.service.j2"
        dest: /etc/systemd/system/puma.service
        owner: root
        group: root
        mode: "0644"

    - name: Reload systemd to recognize the new service
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start Puma service
      ansible.builtin.systemd:
        name: puma
        enabled: yes
        state: started
